const fs = require('fs');
const { Builder, By, until } = require('selenium-webdriver');
const chrome = require('selenium-webdriver/chrome');

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Chrome
const chromeOptions = new chrome.Options();
// chromeOptions.addArguments('--headless'); // –ó–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
chromeOptions.addArguments('--no-sandbox');
chromeOptions.addArguments('--disable-dev-shm-usage');
chromeOptions.addArguments('--disable-gpu');
chromeOptions.addArguments('--window-size=1920,1080');
chromeOptions.addArguments('--user-agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36');

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
chromeOptions.addArguments('--disable-blink-features=AutomationControlled');
chromeOptions.addArguments('--disable-web-security');
chromeOptions.addArguments('--ignore-certificate-errors');
chromeOptions.addArguments('--ignore-ssl-errors');
chromeOptions.addArguments('--allow-running-insecure-content');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const CONFIG = {
    startDate: new Date('2024-01-01'),
    endDate: new Date('2025-05-31')
    // –£–±—Ä–∞–ª–∏ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∑–∞–¥–µ—Ä–∂–∫—É
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ reviews.json
function loadReviews() {
    try {
        const data = fs.readFileSync('./reviews.json', 'utf8');
        return JSON.parse(data);
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ reviews.json:', error.message);
        return [];
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –¥–∞—Ç–∞–º
function filterByDate(reviews) {
    return reviews.filter(review => {
        const reviewDate = new Date(review.date);
        return reviewDate >= CONFIG.startDate && reviewDate <= CONFIG.endDate;
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –≥–æ—Ä–æ–¥–∞ –∏ –ø—Ä–æ–¥—É–∫—Ç–∞ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
async function parsePageData(driver, url) {
    try {
        console.log(`  üìÑ –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É: ${url}`);
        await driver.get(url);

        // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–≥–æ –∏–∑ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–ø—Ä–æ–¥—É–∫—Ç –∏–ª–∏ –≥–æ—Ä–æ–¥)
        try {
            await driver.wait(until.elementLocated(By.css('body')), 10000);
            // –î–∞–µ–º –Ω–µ–±–æ–ª—å—à–æ–µ –≤—Ä–µ–º—è –Ω–∞ –ø–æ–ª–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É DOM
            await driver.sleep(100);
        } catch (e) {
            console.log('    ‚ö†Ô∏è  –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å –ø–æ–ª–Ω–æ—Å—Ç—å—é');
        }

        let product = null;
        let city = null;
        let status = null; // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ–±–ª–µ–º—ã

        // –ü–æ–∏—Å–∫ –ø—Ä–æ–¥—É–∫—Ç–∞ –ø–æ –∫–ª–∞—Å—Å—É h-color-D30 h-mr-16 _1w66l1f
        try {
            // –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –ø—Ä–æ–¥—É–∫—Ç–∞
            await driver.wait(until.elementLocated(By.css('.h-color-D30.h-mr-16._1w66l1f')), 3000);
            const productElement = await driver.findElement(By.css('.h-color-D30.h-mr-16._1w66l1f'));
            product = await productElement.getText();
            product = product.trim();
        } catch (e) {
            // –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–º–∏ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞–º–∏
            try {
                await driver.wait(until.elementLocated(By.css('[class*="h-color-D30"]')), 2000);
                const productElement = await driver.findElement(By.css('[class*="h-color-D30"]'));
                product = await productElement.getText();
                product = product.trim();
            } catch (e2) {
                console.log('    ‚ö†Ô∏è  –ü—Ä–æ–¥—É–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
            }
        }

        // –ü–æ–∏—Å–∫ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ–±–ª–µ–º—ã –∏ –≥–æ—Ä–æ–¥–∞ –ø–æ –∫–ª–∞—Å—Å—É _1vfu01w _1mxed63 _8km2y3
        try {
            // –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            await driver.wait(until.elementsLocated(By.css('._1vfu01w._1mxed63._8km2y3')), 3000);
            const statusElements = await driver.findElements(By.css('._1vfu01w._1mxed63._8km2y3'));

            if (statusElements.length >= 1) {
                // –ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç - —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–±–ª–µ–º—ã
                status = await statusElements[0].getText();
                status = status.trim();
            }

            if (statusElements.length >= 2) {
                // –í—Ç–æ—Ä–æ–π —ç–ª–µ–º–µ–Ω—Ç - –≥–æ—Ä–æ–¥
                city = await statusElements[1].getText();
                city = city.trim();
            } else if (statusElements.length === 1) {
                // –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç, –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ –≥–æ—Ä–æ–¥
                console.log('    ‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω —Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ç—É—Å, –∏—â–µ–º –≥–æ—Ä–æ–¥ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ');
            }
        } catch (e) {
            // –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–º–∏ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞–º–∏
            try {
                await driver.wait(until.elementsLocated(By.css('[class*="_1vfu01w"]')), 2000);
                const statusElements = await driver.findElements(By.css('[class*="_1vfu01w"]'));

                if (statusElements.length >= 1) {
                    status = await statusElements[0].getText();
                    status = status.trim();
                }

                if (statusElements.length >= 2) {
                    city = await statusElements[1].getText();
                    city = city.trim();
                } else if (statusElements.length === 1) {
                    console.log('    ‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω —Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ç—É—Å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ');
                }
            } catch (e2) {
                console.log('    ‚ö†Ô∏è  –°—Ç–∞—Ç—É—Å –∏ –≥–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
            }
        }

        return { product, city, status };
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', error.message);
        return { product: null, city: null, status: null };
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–¥–Ω–æ–≥–æ –æ—Ç–∑—ã–≤–∞
async function processReview(driver, review, index) {
    try {
        console.log(`\nüîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–∑—ã–≤ ${index + 1}: ${review.id}`);

        const { product, city, status } = await parsePageData(driver, review.link);

        console.log(`  üì¶ –ü—Ä–æ–¥—É–∫—Ç: ${product || '–Ω–µ –Ω–∞–π–¥–µ–Ω'}`);
        console.log(`  üèôÔ∏è  –ì–æ—Ä–æ–¥: ${city || '–Ω–µ –Ω–∞–π–¥–µ–Ω'}`);
        console.log(`  üìã –°—Ç–∞—Ç—É—Å: ${status || '–Ω–µ –Ω–∞–π–¥–µ–Ω'}`);

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–æ–ø–æ–ª–Ω–µ–Ω–Ω—ã–π –æ—Ç–∑—ã–≤
        return {
            ...review,
            product: product,
            city: city,
            status: status
        };
    } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç–∑—ã–≤–∞ ${review.id}:`, error.message);
        return {
            ...review,
            product: null,
            city: null,
            status: null
        };
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ dataset.json
function saveDataset(data) {
    try {
        const json = JSON.stringify(data, null, 2);
        fs.writeFileSync('./dataset.json', json, 'utf8');
        console.log(`\nüíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ dataset.json`);
        console.log(`üìä –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${data.length}`);
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ dataset.json:', error.message);
    }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–∞—Ä—Å–µ—Ä–∞
async function parseReviewsData() {
    let driver = null;

    try {
        console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º WebDriver...');
        driver = await new Builder()
            .forBrowser('chrome')
            .setChromeOptions(chromeOptions)
            .build();

        console.log('‚úÖ WebDriver –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');

        console.log('\nüìñ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ reviews.json...');
        const allReviews = loadReviews();
        console.log(`üìã –í—Å–µ–≥–æ –æ—Ç–∑—ã–≤–æ–≤: ${allReviews.length}`);

        console.log('\nüîç –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –¥–∞—Ç–∞–º (01.01.2024 - 31.05.2025)...');
        const filteredReviews = filterByDate(allReviews);
        console.log(`‚úÖ –û—Ç–∑—ã–≤–æ–≤ –ø–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏: ${filteredReviews.length}`);

        if (filteredReviews.length === 0) {
            console.log('‚ö†Ô∏è  –ù–µ—Ç –æ—Ç–∑—ã–≤–æ–≤ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ –¥–∞—Ç');
            return [];
        }

        // –ü–∞—Ä—Å–∏–º –≤—Å–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –æ—Ç–∑—ã–≤—ã
        const reviewsToProcess = filteredReviews;
        console.log(`\nüß™ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ ${reviewsToProcess.length} –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –æ—Ç–∑—ã–≤–æ–≤...`);

        const processedReviews = [];

        for (let i = 0; i < reviewsToProcess.length; i++) {
            const review = reviewsToProcess[i];
            const processedReview = await processReview(driver, review, i);
            processedReviews.push(processedReview);
            // –£–±—Ä–∞–ª–∏ –∑–∞–¥–µ—Ä–∂–∫—É - –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –æ—Ç–∑—ã–≤—É —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—É—â–µ–≥–æ
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        saveDataset(processedReviews);

        console.log('\nüéâ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
        return processedReviews;

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏:', error.message);
        return [];
    } finally {
        if (driver) {
            await driver.quit();
            console.log('üîö WebDriver –∑–∞–∫—Ä—ã—Ç');
        }
    }
}

// –ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞, –µ—Å–ª–∏ —Ñ–∞–π–ª –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
    parseReviewsData();
}

module.exports = {
    parseReviewsData,
    loadReviews,
    filterByDate,
    saveDataset
};

