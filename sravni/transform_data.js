const fs = require('fs');

function transformData() {
    console.log('–ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ dataset.json...');
    
    // –ß–∏—Ç–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª
    const rawData = fs.readFileSync('dataset.json', 'utf8');
    const dataset = JSON.parse(rawData);
    
    console.log(`–ù–∞–π–¥–µ–Ω–æ ${dataset.length} –∑–∞–ø–∏—Å–µ–π –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏`);
    
    const transformedData = dataset.map((item, index) => {
        // –ò–∑–≤–ª–µ–∫–∞–µ–º title –∏ text –∏–∑ content
        let title = '';
        let text = '';
        
        if (item.content) {
            // –ò—â–µ–º –ø–µ—Ä–≤—ã–µ –¥–≤–∞ –ø–µ—Ä–µ–Ω–æ—Å–∞ —Å—Ç—Ä–æ–∫–∏
            const doubleNewlineIndex = item.content.indexOf('\n\n');
            
            if (doubleNewlineIndex !== -1) {
                // –ï—Å–ª–∏ –Ω–∞—à–ª–∏ –¥–≤–æ–π–Ω–æ–π –ø–µ—Ä–µ–Ω–æ—Å, –±–µ—Ä–µ–º –≤—Å–µ –¥–æ –Ω–µ–≥–æ –∫–∞–∫ title
                title = item.content.substring(0, doubleNewlineIndex).trim();
                // –û—Å—Ç–∞–ª—å–Ω–æ–µ –∫–∞–∫ text, —É–±–∏—Ä–∞—è title –∏–∑ –Ω–∞—á–∞–ª–∞
                text = item.content.substring(doubleNewlineIndex + 2).trim();
            } else {
                // –ï—Å–ª–∏ –¥–≤–æ–π–Ω–æ–≥–æ –ø–µ—Ä–µ–Ω–æ—Å–∞ –Ω–µ—Ç, –∏—â–µ–º –æ–¥–∏–Ω–∞—Ä–Ω—ã–π
                const singleNewlineIndex = item.content.indexOf('\n');
                if (singleNewlineIndex !== -1) {
                    title = item.content.substring(0, singleNewlineIndex).trim();
                    text = item.content.substring(singleNewlineIndex + 1).trim();
                } else {
                    // –ï—Å–ª–∏ –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ –≤–æ–æ–±—â–µ –Ω–µ—Ç, –≤–µ—Å—å content —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è title
                    title = item.content.trim();
                    text = '';
                }
            }
        }
        
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç–∞—Ç—É—Å
        let status = '';
        if (item.status === '–ü–†–û–í–ï–†–ï–ù') {
            status = 'verified';
        } else if (item.status === '–ü–†–û–ë–õ–ï–ú–ê –†–ï–®–ï–ù–ê') {
            status = 'decided';
        } else {
            status = item.status ? item.status.toLowerCase() : '';
        }
        
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç —Å –Ω—É–∂–Ω—ã–º –ø–æ—Ä—è–¥–∫–æ–º –ø–æ–ª–µ–π
        const transformedItem = {
            id: parseInt(item.id), // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —á–∏—Å–ª–æ
            link: item.link || '',
            date: item.date || '',
            title: title,
            text: text,
            rating: item.rating ? item.rating.toString() : '', // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å—Ç—Ä–æ–∫—É
            status: status,
            city: item.city || ''
        };
        
        // –î–æ–±–∞–≤–ª—è–µ–º product —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        if (item.product) {
            transformedItem.product = item.product;
        }
        
        // –õ–æ–≥–∏—Ä—É–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 1000 –∑–∞–ø–∏—Å–µ–π
        if ((index + 1) % 1000 === 0) {
            console.log(`–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${index + 1} –∑–∞–ø–∏—Å–µ–π...`);
        }
        
        return transformedItem;
    });
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –Ω–æ–≤—ã–π —Ñ–∞–π–ª
    fs.writeFileSync('data.json', JSON.stringify(transformedData, null, 2), 'utf8');
    
    console.log(`‚úÖ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª data.json —Å ${transformedData.length} –∑–∞–ø–∏—Å—è–º–∏`);
    console.log('üìä –ü—Ä–∏–º–µ—Ä—ã –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π:');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤
    for (let i = 0; i < Math.min(3, transformedData.length); i++) {
        console.log(`\n–ü—Ä–∏–º–µ—Ä ${i + 1}:`);
        console.log('Title:', transformedData[i].title);
        console.log('Text preview:', transformedData[i].text.substring(0, 100) + (transformedData[i].text.length > 100 ? '...' : ''));
        console.log('Status:', transformedData[i].status);
        console.log('Rating type:', typeof transformedData[i].rating);
        console.log('ID type:', typeof transformedData[i].id);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
try {
    transformData();
} catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error.message);
    process.exit(1);
}