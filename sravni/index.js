const { Builder, By, until } = require('selenium-webdriver');
const chrome = require('selenium-webdriver/chrome');
const fs = require('fs').promises;

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Chrome
const chromeOptions = new chrome.Options();
// –ú–æ–∂–Ω–æ —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–ª—è headless —Ä–µ–∂–∏–º–∞
// chromeOptions.addArguments('--headless');
chromeOptions.addArguments('--no-sandbox');
chromeOptions.addArguments('--disable-dev-shm-usage');
chromeOptions.addArguments('--window-size=1920,1080');

// –ú–∞–ø–ø–∏–Ω–≥ —Ä—É—Å—Å–∫–∏—Ö –º–µ—Å—è—Ü–µ–≤ –≤ —á–∏—Å–ª–∞
const monthMap = {
    '—è–Ω–≤–∞—Ä—è': '01', '—Ñ–µ–≤—Ä–∞–ª—è': '02', '–º–∞—Ä—Ç–∞': '03', '–∞–ø—Ä–µ–ª—è': '04',
    '–º–∞—è': '05', '–∏—é–Ω—è': '06', '–∏—é–ª—è': '07', '–∞–≤–≥—É—Å—Ç–∞': '08',
    '—Å–µ–Ω—Ç—è–±—Ä—è': '09', '–æ–∫—Ç—è–±—Ä—è': '10', '–Ω–æ—è–±—Ä—è': '11', '–¥–µ–∫–∞–±—Ä—è': '12'
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞—Ç—ã
function parseDate(dateText) {
    try {
        // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
        const cleanDate = dateText.trim();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç "–¥–µ–Ω—å –º–µ—Å—è—Ü" –∏–ª–∏ "–¥–µ–Ω—å –º–µ—Å—è—Ü –≥–æ–¥"
        const parts = cleanDate.split(' ');

        if (parts.length >= 2) {
            const day = parts[0].padStart(2, '0');
            const monthName = parts[1];
            const year = parts.length >= 3 ? parts[2] : '2025';

            const month = monthMap[monthName] || '01';
            return `${year}-${month}-${day}`;
        }

        return cleanDate; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å
    } catch (error) {
        console.warn('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞—Ç—ã:', dateText, error.message);
        return dateText;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞ –ø–æ –∑–≤–µ–∑–¥–æ—á–∫–∞–º
async function parseRating(driver, reviewElement) {
    try {
        // –ò—â–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º
        const rateContainer = await reviewElement.findElement(By.css('[data-qa="Rate"]'));

        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–≤–µ–∑–¥–æ—á–∫–∏
        const stars = await rateContainer.findElements(By.css('div._1expmgd._4czyoq'));

        let filledStars = 0;

        for (let i = 0; i < stars.length; i++) {
            try {
                // –ò—â–µ–º SVG —ç–ª–µ–º–µ–Ω—Ç –≤–Ω—É—Ç—Ä–∏ –∑–≤–µ–∑–¥–æ—á–∫–∏
                const svgElement = await stars[i].findElement(By.css('svg[data-qa="Star"]'));

                // –ü–æ–ª—É—á–∞–µ–º –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
                const cssVars = await driver.executeScript(`
                    const svgElement = arguments[0];
                    const computedStyle = window.getComputedStyle(svgElement);
                    
                    // –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
                    const filledStroke = computedStyle.getPropertyValue('--rate-filled-stroke');
                    const filledBgColor = computedStyle.getPropertyValue('--rate-filled-bgColor');
                    const filledColor = computedStyle.getPropertyValue('--rate-filled-color');
                    
                    const unfilledStroke = computedStyle.getPropertyValue('--rate-unfilled-light-stroke');
                    const unfilledBgColor = computedStyle.getPropertyValue('--rate-unfilled-light-bgColor');
                    const unfilledColor = computedStyle.getPropertyValue('--rate-unfilled-light-color');
                    
                    // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏
                    const actualFill = computedStyle.fill;
                    const actualStroke = computedStyle.stroke;
                    const actualColor = computedStyle.color;
                    
                    return {
                        filled: { stroke: filledStroke, bgColor: filledBgColor, color: filledColor },
                        unfilled: { stroke: unfilledStroke, bgColor: unfilledBgColor, color: unfilledColor },
                        actual: { fill: actualFill, stroke: actualStroke, color: actualColor }
                    };
                `, svgElement);

                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ —Ü–≤–µ—Ç –∑–∞–ª–∏–≤–∫–∏ —Ü–≤–µ—Ç—É –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–π –∑–≤–µ–∑–¥–æ—á–∫–∏
                const filledColor = cssVars.filled.bgColor; // #e5a345
                const actualFill = cssVars.actual.fill;

                // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º hex –≤ rgb –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
                const isFilledColor = actualFill.includes('229, 163, 69') || // rgb(229, 163, 69) = #e5a345
                    actualFill.includes('#e5a345') ||
                    actualFill === filledColor;

                if (isFilledColor) {
                    filledStars++;
                }

            } catch (e) {
                console.warn(`   ‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–≤–µ–∑–¥–æ—á–∫—É ${i + 1}:`, e.message);
            }
        }

        return filledStars;

    } catch (error) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ä–µ–π—Ç–∏–Ω–≥:', error.message);
        return null;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤ –≤ JSON —Ñ–∞–π–ª
async function saveReviewsToFile(reviews, filename = 'reviews.json') {
    try {
        await fs.writeFile(filename, JSON.stringify(reviews, null, 2), 'utf8');
        console.log(`üíæ –û—Ç–∑—ã–≤—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª: ${filename}`);
        console.log(`üìä –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –æ—Ç–∑—ã–≤–æ–≤: ${reviews.length}`);
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞:', error.message);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ–¥–Ω–æ–≥–æ –æ—Ç–∑—ã–≤–∞
async function parseReview(driver, reviewElement) {
    try {
        // –ü–æ–ª—É—á–∞–µ–º ID –æ—Ç–∑—ã–≤–∞ –∏–∑ data-id –∞—Ç—Ä–∏–±—É—Ç–∞
        const reviewId = await reviewElement.getAttribute('data-id');

        // –ò—â–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –æ—Ç–∑—ã–≤
        const linkElement = await reviewElement.findElement(By.css('a[class*="review-card_link"]'));
        const reviewLink = await linkElement.getAttribute('href');
        const fullLink = reviewLink.startsWith('/') ? `https://www.sravni.ru${reviewLink}` : reviewLink;

        // –ü–∞—Ä—Å–∏–º –¥–∞—Ç—É
        let reviewDate = '';
        try {
            // –ò—â–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –¥–∞—Ç–æ–π –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ
            const dateContainer = await reviewElement.findElement(By.css('.h-ml-12._10cf6rv._19sgipd'));
            const dateElement = await dateContainer.findElement(By.css('.h-color-D30._1aja02n._1w66l1f'));
            const dateText = await dateElement.getText();
            reviewDate = parseDate(dateText);
        } catch (e) {
            console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –¥–∞—Ç—É –¥–ª—è –æ—Ç–∑—ã–≤–∞', reviewId);
        }

        // –ü–∞—Ä—Å–∏–º —Ä–µ–π—Ç–∏–Ω–≥
        const rating = await parseRating(driver, reviewElement);

        // –ü–∞—Ä—Å–∏–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        let title = '';
        try {
            const titleElement = await reviewElement.findElement(By.css('[class*="review-card_title"]'));
            title = await titleElement.getText();
        } catch (e) {
            console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –æ—Ç–∑—ã–≤–∞', reviewId);
        }

        // –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É "–ß–∏—Ç–∞—Ç—å" –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
        try {
            const readButton = await reviewElement.findElement(By.css('a._i91ye._qagut5'));
            await driver.executeScript("arguments[0].click();", readButton);
            await driver.sleep(1000); // –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É –ø–æ–ª–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
        } catch (e) {
            console.log('–ö–Ω–æ–ø–∫–∞ "–ß–∏—Ç–∞—Ç—å" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ —É–∂–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç —Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–∑—ã–≤–∞', reviewId);
        }

        // –ü–∞—Ä—Å–∏–º —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞
        let reviewText = '';
        try {
            const textElement = await reviewElement.findElement(By.css('[class*="review-card_text"] span'));
            reviewText = await textElement.getText();
        } catch (e) {
            console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–∑—ã–≤–∞', reviewId);
        }

        // –û–±—ä–µ–¥–∏–Ω—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Ç–µ–∫—Å—Ç
        const fullContent = title && reviewText ? `${title}\n\n${reviewText}` : title || reviewText;

        return {
            id: reviewId,
            link: fullLink,
            date: reviewDate,
            rating: rating,
            content: fullContent.trim()
        };

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –æ—Ç–∑—ã–≤–∞:', error.message);
        return null;
    }
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–∞—Ä—Å–µ—Ä–∞
async function parseSravniGazprombank() {
    let driver;

    try {
        console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞ Sravni.ru –¥–ª—è –ì–∞–∑–ø—Ä–æ–º–±–∞–Ω–∫–∞...');

        // –°–æ–∑–¥–∞–Ω–∏–µ –¥—Ä–∞–π–≤–µ—Ä–∞ Chrome
        driver = await new Builder()
            .forBrowser('chrome')
            .setChromeOptions(chromeOptions)
            .build();

        console.log('‚úÖ Chrome –¥—Ä–∞–π–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω');

        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ—Ç–∑—ã–≤–æ–≤ –ì–∞–∑–ø—Ä–æ–º–±–∞–Ω–∫–∞
        const url = 'https://www.sravni.ru/bank/gazprombank/otzyvy/';
        console.log(`üîó –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞: ${url}`);

        await driver.get(url);

        // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        await driver.wait(until.titleContains('–ì–∞–∑–ø—Ä–æ–º–±–∞–Ω–∫'), 10000);

        console.log('üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');

        // –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        const title = await driver.getTitle();
        console.log(`üìù –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${title}`);

        // –ü–∞—É–∑–∞ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è (–º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ)
        console.log('‚è≥ –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏...');
        await driver.sleep(5000);

        console.log('‚úÖ –ü–∞—Ä—Å–µ—Ä —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ —Å–∞–π—Ç—É!');

        // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å –æ—Ç–∑—ã–≤–∞–º–∏
        console.log('üîç –ò—â–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –æ—Ç–∑—ã–≤–∞–º–∏...');
        await driver.wait(until.elementLocated(By.css('.page_mainColumn__oogxd')), 15000);

        // –ù–∞—Ö–æ–¥–∏–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        const mainContainer = await driver.findElement(By.css('.page_mainColumn__oogxd'));

        // –ò—â–µ–º wrapper —Å –æ—Ç–∑—ã–≤–∞–º–∏
        const reviewsWrapper = await mainContainer.findElement(By.css('.styles_wrapper___EM4q'));

        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∏–≤—ã —Å –æ—Ç–∑—ã–≤–∞–º–∏ (—É –Ω–∏—Ö –µ—Å—Ç—å data-id –∞—Ç—Ä–∏–±—É—Ç)
        const reviewElements = await reviewsWrapper.findElements(By.css('div[data-id]'));

        console.log(`üìã –ù–∞–π–¥–µ–Ω–æ –æ—Ç–∑—ã–≤–æ–≤: ${reviewElements.length}`);

        // –ü–∞—Ä—Å–∏–º –¥–æ 50 –æ—Ç–∑—ã–≤–æ–≤ —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –ø–æ–¥–≥—Ä—É–∑–∫–æ–π
        const targetReviews = 200;
        const reviews = [];
        let parsedIds = new Set(); // –î–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
        let reviewQueue = []; // –û—á–µ—Ä–µ–¥—å –æ—Ç–∑—ã–≤–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏

        console.log(`üéØ –¶–µ–ª—å: —Å–ø–∞—Ä—Å–∏—Ç—å ${targetReviews} –æ—Ç–∑—ã–≤–æ–≤`);

        // –§–æ–Ω–æ–≤—ã–π —Å–∫—Ä–æ–ª–ª –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É –æ—Ç–∑—ã–≤—É –≤ –æ—á–µ—Ä–µ–¥–∏
        let keepScrolling = true;
        const startBackgroundScroll = async () => {
            while (keepScrolling) {
                if (reviewQueue.length > 0) {
                    // –°–∫—Ä–æ–ª–ª–∏–º –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É –æ—Ç–∑—ã–≤—É –≤ –æ—á–µ—Ä–µ–¥–∏ –∫–∞–∫ –∫ —è–∫–æ—Ä—é
                    const lastReviewId = reviewQueue[reviewQueue.length - 1];
                    try {
                        const lastElement = await driver.findElement(By.css(`div[data-id="${lastReviewId}"]`));
                        await driver.executeScript("arguments[0].scrollIntoView({behavior: 'smooth', block: 'center'});", lastElement);
                        console.log(`üéØ –°–∫—Ä–æ–ª–ª–∏–º –∫ —è–∫–æ—Ä—é - –ø–æ—Å–ª–µ–¥–Ω–µ–º—É –æ—Ç–∑—ã–≤—É –≤ –æ—á–µ—Ä–µ–¥–∏: ${lastReviewId}`);
                    } catch (e) {
                        // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, –¥–µ–ª–∞–µ–º –æ–±—ã—á–Ω—ã–π —Å–∫—Ä–æ–ª–ª
                        await driver.executeScript('window.scrollBy(0, 300);');
                    }
                } else {
                    // –ï—Å–ª–∏ –æ—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å–∫—Ä–æ–ª–ª–∏—Ç—å –≤–Ω–∏–∑ –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤
                    await driver.executeScript('window.scrollBy(0, 300);');
                }
                await driver.sleep(2000); // –°–∫—Ä–æ–ª–ª–∏–º –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã
            }
        };

        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –ø–æ–ª–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—á–µ—Ä–µ–¥–∏
        const updateReviewQueue = async () => {
            console.log(`üîç –ü–µ—Ä–µ—Å–∫–∞–Ω–∏—Ä—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤...`);

            // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–µ–∫—É—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –æ—Ç–∑—ã–≤–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
            const currentReviewElements = await driver.findElements(By.css('.page_mainColumn__oogxd .styles_wrapper___EM4q div[data-id]'));

            console.log(`ÔøΩ –ù–∞–π–¥–µ–Ω–æ ${currentReviewElements.length} –æ—Ç–∑—ã–≤–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ`);

            // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—É—é –æ—á–µ—Ä–µ–¥—å (—ç–ª–µ–º–µ–Ω—Ç—ã –º–æ–≥–ª–∏ —É—Å—Ç–∞—Ä–µ—Ç—å –ø–æ—Å–ª–µ —Å–∫—Ä–æ–ª–ª–∞)
            reviewQueue = [];

            let newReviewsFound = 0;
            let duplicatesSkipped = 0;

            // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–º –æ—Ç–∑—ã–≤–∞–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –≤ –æ—á–µ—Ä–µ–¥—å
            for (let reviewElement of currentReviewElements) {
                try {
                    const reviewId = await reviewElement.getAttribute('data-id');

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–∑—ã–≤ –µ—â–µ –Ω–µ –±—ã–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω
                    if (parsedIds.has(reviewId)) {
                        duplicatesSkipped++;
                        continue;
                    }

                    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ ID –æ—Ç–∑—ã–≤–∞ –≤ –æ—á–µ—Ä–µ–¥—å (–ù–ï —Å–∞–º —ç–ª–µ–º–µ–Ω—Ç!)
                    reviewQueue.push(reviewId);
                    newReviewsFound++;

                } catch (e) {
                    console.warn(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –æ—Ç–∑—ã–≤–∞:`, e.message);
                }
            }

            console.log(`üìà –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –æ—á–µ—Ä–µ–¥—å: ${newReviewsFound} –Ω–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤`);

            if (duplicatesSkipped > 0) {
                console.log(`‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ ${duplicatesSkipped} —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤`);
            }

            console.log(`üìä –¢–µ–∫—É—â–∞—è –æ—á–µ—Ä–µ–¥—å: ${reviewQueue.length} –æ—Ç–∑—ã–≤–æ–≤`);
            console.log(`üìä –£–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${parsedIds.size} –æ—Ç–∑—ã–≤–æ–≤`);
            console.log(`üìä –í—Å–µ–≥–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: ${currentReviewElements.length} –æ—Ç–∑—ã–≤–æ–≤`);

            if (newReviewsFound > 0) {
                console.log(`üÜî –ù–æ–≤—ã–µ ID –≤ –æ—á–µ—Ä–µ–¥–∏:`, reviewQueue.slice(0, 3), reviewQueue.length > 3 ? `... –∏ –µ—â–µ ${reviewQueue.length - 3}` : '');
            }

            return newReviewsFound;
        };        // –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
        console.log(`\nüîç –í—ã–ø–æ–ª–Ω—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...`);
        const initialNewReviews = await updateReviewQueue();
        console.log(`üìã –ù–∞—á–∞–ª—å–Ω–∞—è –æ—á–µ—Ä–µ–¥—å: ${reviewQueue.length} –æ—Ç–∑—ã–≤–æ–≤`);

        if (reviewQueue.length === 0) {
            console.log(`‚ùå –û–®–ò–ë–ö–ê: –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –æ—Ç–∑—ã–≤–∞ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞!`);
            console.log(`üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –∏–ª–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã.`);
            return;
        }

        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç–∑—ã–≤–æ–≤ –≤ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º —Å–ø–∏—Å–∫–µ
        const validateUniqueReviews = (reviewsList) => {
            const seenIds = new Set();
            const duplicates = [];

            for (let review of reviewsList) {
                if (seenIds.has(review.id)) {
                    duplicates.push(review.id);
                } else {
                    seenIds.add(review.id);
                }
            }

            if (duplicates.length > 0) {
                console.warn(`‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –¥—É–±–ª–∏–∫–∞—Ç—ã –≤ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º —Å–ø–∏—Å–∫–µ: ${duplicates.join(', ')}`);
                return false;
            } else {
                console.log(`‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –ø—Ä–æ–π–¥–µ–Ω–∞: –≤—Å–µ ${reviewsList.length} –æ—Ç–∑—ã–≤–æ–≤ —É–Ω–∏–∫–∞–ª—å–Ω—ã`);
                return true;
            }
        };

        // –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤—ã–π –ø–ª–∞–≤–Ω—ã–π —Å–∫—Ä–æ–ª–ª
        const scrollPromise = startBackgroundScroll();

        while (reviews.length < targetReviews && reviewQueue.length > 0) {
            // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π ID –æ—Ç–∑—ã–≤–∞ –∏–∑ –æ—á–µ—Ä–µ–¥–∏
            const currentReviewId = reviewQueue.shift();

            console.log(`\nüìù –ü–∞—Ä—Å–∏–º –æ—Ç–∑—ã–≤ ${reviews.length + 1} –∏–∑ ${targetReviews} (ID: ${currentReviewId})...`);
            console.log(`üìä –û—Å—Ç–∞–ª–æ—Å—å –≤ –æ—á–µ—Ä–µ–¥–∏: ${reviewQueue.length} –æ—Ç–∑—ã–≤–æ–≤`);

            // –ù–∞—Ö–æ–¥–∏–º —ç–ª–µ–º–µ–Ω—Ç –ø–æ ID –∑–∞–Ω–æ–≤–æ (—á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å stale element)
            let currentReviewElement;
            try {
                currentReviewElement = await driver.findElement(By.css(`div[data-id="${currentReviewId}"]`));
            } catch (e) {
                console.warn(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç –æ—Ç–∑—ã–≤–∞ —Å ID ${currentReviewId}, –≤–æ–∑–º–æ–∂–Ω–æ —ç–ª–µ–º–µ–Ω—Ç —É—Å—Ç–∞—Ä–µ–ª`);
                continue;
            }

            const review = await parseReview(driver, currentReviewElement);
            if (review) {
                reviews.push(review);
                parsedIds.add(currentReviewId);

                console.log(`‚úÖ –û—Ç–∑—ã–≤ ${review.id} —É—Å–ø–µ—à–Ω–æ —Å–ø–∞—Ä—Å–µ–Ω`);
                console.log(`   üìÖ –î–∞—Ç–∞: ${review.date}`);
                console.log(`   ‚≠ê –†–µ–π—Ç–∏–Ω–≥: ${review.rating}/5`);
                console.log(`   üîó –°—Å—ã–ª–∫–∞: ${review.link}`);
                console.log(`   üìÑ –ö–æ–Ω—Ç–µ–Ω—Ç: ${review.content.substring(0, 100)}...`);

                // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –ø–æ–¥–≥—Ä—É–∑–∫–∏ –Ω–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤
                await driver.sleep(1500);

                // –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ø–µ—Ä–µ—Å–∫–∞–Ω–∏—Ä—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –ø–æ–∏—Å–∫–∞—Ö –Ω–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ —Å–ø–∞—Ä—Å–µ–Ω–Ω–æ–≥–æ –æ—Ç–∑—ã–≤–∞
                console.log(`üîÑ –ü–µ—Ä–µ—Å–∫–∞–Ω–∏—Ä—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ—Å–ª–µ –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–∑—ã–≤–∞ ${review.id}...`);
                const foundNewReviews = await updateReviewQueue();

                if (foundNewReviews > 0) {
                    console.log(`üéâ –û—Ç–ª–∏—á–Ω–æ! –ü–æ—Å–ª–µ —Å–∫—Ä–æ–ª–ª–∞ –Ω–∞–π–¥–µ–Ω–æ ${foundNewReviews} –Ω–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤!`);
                } else {
                    console.log(`‚ÑπÔ∏è –ù–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –ø–æ—Å–ª–µ —Å–∫—Ä–æ–ª–ª–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ`);
                }

            } else {
                console.warn(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–ø–∞—Ä—Å–∏—Ç—å –æ—Ç–∑—ã–≤ ${currentReviewId}`);
            }

            // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –ø–∞—Ä—Å–∏–Ω–≥–æ–º –æ—Ç–∑—ã–≤–æ–≤
            await driver.sleep(500);

            // –ï—Å–ª–∏ –æ—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞, –Ω–æ —Ü–µ–ª—å –Ω–µ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞, –ø—Ä–æ—Å—Ç–æ –∂–¥–µ–º –∏ –ø–µ—Ä–µ—Å–∫–∞–Ω–∏—Ä—É–µ–º
            if (reviewQueue.length === 0 && reviews.length < targetReviews) {
                console.log(`\n‚¨áÔ∏è –û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞, –∂–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –∏ –ø–µ—Ä–µ—Å–∫–∞–Ω–∏—Ä—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É...`);
                await driver.sleep(5000);
                const newReviewsFound = await updateReviewQueue();
                if (reviewQueue.length === 0) {
                    console.log(`\nüèÅ –ë–æ–ª—å—à–µ –æ—Ç–∑—ã–≤–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –æ—Ç–∑—ã–≤—ã. –ò—Ç–æ–≥–æ —Å–ø–∞—Ä—Å–µ–Ω–æ: ${reviews.length} –æ—Ç–∑—ã–≤–æ–≤`);
                    break;
                }
            }
        }

        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ–Ω–æ–≤—ã–π —Å–∫—Ä–æ–ª–ª
        keepScrolling = false;
        await scrollPromise;
        console.log('üîç –í—ã–ø–æ–ª–Ω—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –¥—É–±–ª–∏–∫–∞—Ç—ã...');
        validateUniqueReviews(reviews);

        // –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        console.log('üéØ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–ê–†–°–ò–ù–ì–ê:');
        console.log('========================');
        reviews.forEach((review, index) => {
            console.log(`–û—Ç–∑—ã–≤ ${index + 1}:`);
            console.log(`  ID: ${review.id}`);
            console.log(`  –î–∞—Ç–∞: ${review.date}`);
            console.log(`  –†–µ–π—Ç–∏–Ω–≥: ${review.rating}/5`);
            console.log(`  –°—Å—ã–ª–∫–∞: ${review.link}`);
            console.log(`  –ö–æ–Ω—Ç–µ–Ω—Ç: ${review.content}`);
            console.log('------------------------');
        });

        console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–ø–∞—Ä—Å–µ–Ω–æ ${reviews.length} –æ—Ç–∑—ã–≤–æ–≤ –∏–∑ ${targetReviews} –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—ã—Ö`);

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–∑—ã–≤—ã –≤ JSON —Ñ–∞–π–ª
        await saveReviewsToFile(reviews);

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –ø–∞—Ä—Å–µ—Ä–∞:', error.message);
    } finally {
        if (driver) {
            console.log('üîÑ –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω, –±—Ä–∞—É–∑–µ—Ä –æ—Å—Ç–∞–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–º –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è...');
            // await driver.quit(); // –ó–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ - –±—Ä–∞—É–∑–µ—Ä –æ—Å—Ç–∞–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–º
            console.log('‚úÖ –ë—Ä–∞—É–∑–µ—Ä –æ—Å—Ç–∞–µ—Ç—Å—è –¥–æ—Å—Ç—É–ø–Ω—ã–º');
        }
    }
}

// –ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞
if (require.main === module) {
    parseSravniGazprombank()
        .then(() => {
            console.log('üéâ –ü–∞—Ä—Å–µ—Ä –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É');
            process.exit(0);
        })
        .catch((error) => {
            console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
            process.exit(1);
        });
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
module.exports = {
    parseSravniGazprombank
};
